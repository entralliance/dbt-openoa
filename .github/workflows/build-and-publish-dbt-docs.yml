name: build-and-publish-dbt-docs

# See https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#release
on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  DBT_PROFILES_DIR: ${{ github.workspace }}/integration_tests
  POSTGRES_TEST_HOST: localhost
  POSTGRES_TEST_USER: entr
  POSTGRES_TEST_PASS: dbtdocs
  POSTGRES_TEST_PORT: 5432
  POSTGRES_TEST_DBNAME: entr

jobs:
  generate-dbt-docs:
    name: Generate dbt docs
    runs-on: ubuntu-latest
    
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
      
      - name: Start postgres
        run: docker run -e POSTGRES_USER=${{ env.POSTGRES_TEST_USER }} -e POSTGRES_PASSWORD=${{ env.POSTGRES_TEST_PASS }} -p 5432:5432 -d postgres:alpine

      - name: Install Python packages
        run: python -m pip install dbt-postgres$(yq eval '.require-dbt-version' dbt_project.yml | awk -F'"' '{print $2","$4;}')

      - name: Test connection, install packages, and generate docs_project
        run: |
          cp integration_tests/ci/sample.profiles.yml integration_tests/profiles.yml
          cd integration_tests
          dbt debug --profile integration_tests --target docs
          dbt deps --profile integration_tests --target docs
          dbt build --profile integration_tests --target docs
          dbt docs generate --profile integration_tests --target docs
          cp -r target ../target
      
      - name: Set Up Pages
        uses: actions/configure-pages@v2
    
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'target'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
